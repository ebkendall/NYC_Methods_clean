index = 4
k = 10
load(paste0("../../Data/OutputStrInfo_noWater/strInfo_", index, "_", k, ".dat")) # contains the buffer object
View(streetLengthInfo_null)
i=1
j=1
is.null(streetLengthInfo_null[[i]][[j]])
View(streetLengthInfo_null)
nullStr_point_data <- list(DATA = data.frame("precinct" = rep(-1,l), "indigo" = rep(-1,l), "juliet" = rep(-1,l),
"streets1" = rep(-1,l), "streets2" = rep(-1,l),
"area1" = rep(-1,l), "area2" = rep(-1,l), "splitProper" = rep(F,l)),
GRID_IND = NULL)
l = 1000 # arbitrary start length
nullStr_point_data <- list(DATA = data.frame("precinct" = rep(-1,l), "indigo" = rep(-1,l), "juliet" = rep(-1,l),
"streets1" = rep(-1,l), "streets2" = rep(-1,l),
"area1" = rep(-1,l), "area2" = rep(-1,l), "splitProper" = rep(F,l)),
GRID_IND = NULL)
View(nullStr_point_data)
nullStr_point_data <- list(DATA = data.frame("precinct" = rep(-1,l), "indigo" = rep(-1,l), "juliet" = rep(-1,l),
"streets1" = rep(-1,l), "streets2" = rep(-1,l),
"area1" = rep(-1,l), "area2" = rep(-1,l), "splitProper" = rep(F,l)),
GRID_IND_1 = vector(mode = 'list', length = l),
GRID_IND_2 = vector(mode = 'list', length = l))
load('../../Output_noWater/nullGridInfo/nullData2_1.dat')
View(nullStr_point_data)
?do.call
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:10) {
trial1[[i]] = i
trial2[[i]] = 10 * i
}
cbind(trial1, trial2)
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:10) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
cbind(trial1, trial2)
rbind(trial1, trial2)
temp = list(trial1, trial2)
View(temp)
trial1 = list(trial1, trial2)
View(trial1)
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:10) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
do.call( 'cbind', c(trial1, trial2))
do.call( 'rbind', c(trial1, trial2))
temp = list.append(trial1, trial2)
temp = trial1.extend(trial2)
temp = append(trial1, trial2)
View(temp)
trial1 = append(trial1, trial2)
View(trial1)
View(trial2)
nullStr_point_data$DATA = nullStr_point_data$DATA[nullStr_point_data$precinct != -1, ]
View(nullStr_point_data)
k=2
load(paste0("../../Output_noWater/nullGridInfo/nullData", k, "_1.dat"))
nullStr_point_data$DATA = nullStr_point_data$DATA[nullStr_point_data$DATA$precinct != -1, ]
load(paste0("../../Output_noWater/nullGridInfo/nullData", k, "_1.dat"))
nullStr_point_data$DATA = nullStr_point_data$DATA[nullStr_point_data$DATA$precinct != -1, ]
combinedMatchingSetup <- nullStr_point_data
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:5) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
trial1 = append(trial1, trial2)
View(trial1)
is.null(trial1)
lapply(trial1, is.null)
lapply(trial1, is.null())
which(lapply(trial1, is.null))
lapply(trial1, is.null)
c(lapply(trial1, is.null))
do.call(cbind, lapply(trial1, is.null))
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:5) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
do.call(cbind, lapply(trial1, is.null))
sum(do.call(cbind, lapply(trial1, is.null)))
trial1 = trial1[-do.call(cbind, lapply(trial1, is.null)), ]
trial1 = trial1[-do.call(cbind, lapply(trial1, is.null))]
View(trial1)
do.call(cbind, lapply(trial1, is.null))
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:5) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
trial1 = trial1[-(do.call(cbind, lapply(trial1, is.null)))]
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:5) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
trial1 = trial1[do.call(cbind, lapply(trial1, is.null))]
View(trial1)
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:5) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
trial1 = trial1[do.call(cbind, lapply(trial1, !is.null))]
trial1 = trial2 = vector(mode = 'list', length = 10)
for(i in 1:5) {
trial1[[i]] = rep(i, 5)
trial2[[i]] = rep(10 * i, 4)
}
trial1 = trial1[!do.call(cbind, lapply(trial1, is.null))]
View(trial1)
load(paste0("../../Output_noWater/nullGridInfo/nullData", k, "_1.dat"))
nullStr_point_data$DATA = nullStr_point_data$DATA[nullStr_point_data$DATA$precinct != -1, ]
nullStr_point_data$GRID_IND_1 = nullStr_point_data$GRID_IND_1[!do.call(cbind, lapply(nullStr_point_data$GRID_IND_1, is.null))]
nullStr_point_data$GRID_IND_2 = nullStr_point_data$GRID_IND_2[!do.call(cbind, lapply(nullStr_point_data$GRID_IND_2, is.null))]
combinedMatchingSetup <- nullStr_point_data
View(nullStr_point_data)
load(paste0("../../Output_noWater/nullGridInfo/nullData", k, "_1.dat"))
nullStr_point_data$DATA = nullStr_point_data$DATA[nullStr_point_data$DATA$precinct != -1, ]
nullStr_point_data$GRID_IND_1 = nullStr_point_data$GRID_IND_1[!do.call(cbind, lapply(nullStr_point_data$GRID_IND_1, is.null))]
nullStr_point_data$GRID_IND_2 = nullStr_point_data$GRID_IND_2[!do.call(cbind, lapply(nullStr_point_data$GRID_IND_2, is.null))]
combinedMatchingSetup <- nullStr_point_data
for(i in 2:77) {
print(paste0(k, "_", i))
load(paste0("../../Output_noWater/nullGridInfo/nullData", k, "_", i,".dat"))
nullStr_point_data$DATA = nullStr_point_data$DATA[nullStr_point_data$DATA$precinct != -1, ]
nullStr_point_data$GRID_IND_1 = nullStr_point_data$GRID_IND_1[!do.call(cbind, lapply(nullStr_point_data$GRID_IND_1, is.null))]
nullStr_point_data$GRID_IND_2 = nullStr_point_data$GRID_IND_2[!do.call(cbind, lapply(nullStr_point_data$GRID_IND_2, is.null))]
combinedMatchingSetup$DATA = rbind(combinedMatchingSetup$DATA, nullStr_point_data$DATA)
combinedMatchingSetup$GRID_IND_1 = append(combinedMatchingSetup$GRID_IND_1, nullStr_point_data$GRID_IND_1)
combinedMatchingSetup$GRID_IND_2 = append(combinedMatchingSetup$GRID_IND_2, nullStr_point_data$GRID_IND_2)
}
View(combinedMatchingSetup)
# Filter out the streets that do not have any streets because those are not relevant
street1Ind = combinedMatchingSetup$streets1 != 0
# Filter out the streets that do not have any streets because those are not relevant
street1Ind = combinedMatchingSetup$DATA$streets1 != 0
# Filter out the streets that do not have any streets because those are not relevant
street1Ind = (combinedMatchingSetup$DATA$streets1 != 0)
sum(street1Ind)
street2Ind = (combinedMatchingSetup$DATA$streets2 != 0)
# Filter out the streets that do not have any streets because those are not relevant
street1Ind = is.na(combinedMatchingSetup$DATA$streets1)
# Filter out the streets that do not have any streets because those are not relevant
street1Ind = !is.na(combinedMatchingSetup$DATA$streets1)
sum(street1Ind)
street2Ind = (combinedMatchingSetup$DATA$streets2 != 0)
sum(street1Ind & street2Ind)
sum(street2Ind)
which(!street2Ind)
which(street2Ind)
which(street2Ind == F)
sum(street2Ind)
sum(street1Ind)
streetInd = (street1Ind & street2Ind)
sum(!streetInd)
sum(streetInd == street2Ind)
sum(streetInd == street1Ind)
combinedMatchingSetupFix = combinedMatchingSetup[streetInd, ]
combinedMatchingSetup$DATA = combinedMatchingSetup$DATA[streetInd, ]
combinedMatchingSetup$GRID_IND_1 = combinedMatchingSetup$GRID_IND_1[streetInd]
combinedMatchingSetup$GRID_IND_2 = combinedMatchingSetup$GRID_IND_2[streetInd]
View(combinedMatchingSetup)
combinedMatchingSetupFix = combinedMatchingSetup
## Create ratios of area and streets
combinedMatchingSetupFix$DATA$ratioArea = combinedMatchingSetupFix$DATA$area1 /
combinedMatchingSetupFix$DATA$area2
combinedMatchingSetupFix$DATA$ratioArea[which(combinedMatchingSetupFix$DATA$ratioArea < 1)] =
1/combinedMatchingSetupFix$DATA$ratioArea[which(combinedMatchingSetupFix$DATA$ratioArea < 1)]
combinedMatchingSetupFix$DATA$ratioStreet = combinedMatchingSetupFix$DATA$streets1 /
combinedMatchingSetupFix$DATA$streets2
combinedMatchingSetupFix$DATA$ratioStreet[which(combinedMatchingSetupFix$DATA$ratioStreet < 1)] =
1/combinedMatchingSetupFix$DATA$ratioStreet[which(combinedMatchingSetupFix$DATA$ratioStreet < 1)]
View(combinedMatchingSetupFix)
